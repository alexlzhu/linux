{{ if (eq .flavor "kdump") }}
Name: kernel-kdump
Summary: The Linux Kernel (kdump variant)
Version: {{ .version }}
Release: {{ .release }}
License: GPL
Group: System Environment/Kernel
Vendor: The Linux Community
URL: http://www.kernel.org
Provides:  kernel-kdump-{{ .uname }}
%description
The Linux Kernel, used for crashdumping.
{{ end }}

{{ if (ne .flavor "kdump") }}
Name: kernel
Summary: The Linux Kernel
Version: {{ .version }}
Release: {{ .release }}
License: GPL
Group: System Environment/Kernel
Vendor: The Linux Community
URL: http://www.kernel.org
Provides:  kernel-{{ .uname }}
%description
The Linux Kernel, the operating system core itself
{{ end }}

BuildRequires: sed tar m4 bison flex make bc rsync openssl openssl-devel elfutils-libelf-devel kmod dwarves

{{ if .headers_rpm }}
%package headers
Summary: Header files for the Linux kernel for use by glibc
Group: Development/System
Obsoletes: kernel-headers < %{version}
Provides: kernel-headers = %{version}
%description headers
Kernel-headers includes the C header files that specify the interface
between the Linux kernel and userspace libraries and programs.  The
header files define structures and constants that are needed for
building most standard programs and are also needed for rebuilding the
glibc package.
{{ end }}

{{ if .devel_rpm }}
%package devel
Summary: Development package for building kernel modules to match the {{ .uname }} kernel
Group: System Environment/Kernel
AutoReqProv: no
%description -n kernel-devel
This package provides kernel headers and makefiles sufficient to build modules
against the {{ .uname }} kernel package.
{{ end }}

{{ if .selftests }}
%package selftests
Summary: Test package selftests suites for validating the Linux kernel.
AutoReqProv: no
%description selftests
Kernel selftests include tests that are used to validate the Linux kernel
itself. The tests rely on the appropriate configuration options to be set when
the kernel was compiled.
{{ end }}

%define makeopts EXTRAVERSION=-{{ .release }}

%define _enable_debug_packages 0
%define debug_package %{nil}
%define _build_id_links none
%define __spec_install_post \
  %{__arch_install_post} \
  /usr/lib/rpm/brp-compress \
%{nil}

%install
cd /rw/kernel
KBUILD_IMAGE=$(make -s %{?makeopts} image_name)
if [ ! -f "$KBUILD_IMAGE" ]; then
	echo "vmlinuz \"$KBUILD_IMAGE\" missing, wtf."
	exit 1
fi
mkdir -p $RPM_BUILD_ROOT/boot $RPM_BUILD_ROOT/lib/modules
mkdir -p $RPM_BUILD_ROOT/lib/firmware/{{ .uname }}
cp ./$KBUILD_IMAGE $RPM_BUILD_ROOT/boot/vmlinuz-{{ .uname }}
cp System.map $RPM_BUILD_ROOT/boot/System.map-{{ .uname }}
cp .config $RPM_BUILD_ROOT/boot/config-{{ .uname }}
{{ if .modules }}
make %{makeopts} %{?_smp_mflags} INSTALL_MOD_PATH=$RPM_BUILD_ROOT KBUILD_SRC= mod-fw= modules_install
cp vmlinux $RPM_BUILD_ROOT/lib/modules/{{ .uname }}/vmlinux-{{ .uname }}
ln -sf /lib/modules/{{ .uname }}/vmlinux-{{ .uname }} $RPM_BUILD_ROOT/boot/vmlinux-{{ .uname }}
rm -f $RPM_BUILD_ROOT/lib/modules/{{ .uname }}/{build,source}

# Install the selftest suites, when enabled. Only bother installing them when we
# are building modules, as kernel selftests require modules to be installed.
{{ if .selftests }}
mkdir -p $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}
make %{makeopts} %{?_smp_mflags} -C tools/testing/selftests install TARGETS="livepatch"
cp -a --parents tools/testing/selftests/kselftest_install $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}
{{ end }}

{{ end }}

{{ if .headers_rpm }}
make %{makeopts} %{?_smp_mflags} INSTALL_HDR_PATH=${RPM_BUILD_ROOT}/usr KBUILD_SRC= headers_install
{{ end }}
{{ if .devel_rpm }}
mkdir -p $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}
cp --parents $(find  -type f -name "Makefile*" -o -name "Kconfig*") $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}
cp .config Module.symvers System.map $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}
rm -rf $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}/{Documentation,scripts,include}
cp -a scripts include $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}
rm -f $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}/scripts/*.o
rm -f $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}/scripts/*/*.o
cp -a --parents arch/x86/include $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}
cp .config $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}/include/config/auto.conf
mkdir -p $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}/tools/objtool
cp -a tools/objtool/objtool $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}/tools/objtool/
cp -a --parents tools/include/* $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}
touch -r $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }}/{Makefile,include/generated/uapi/linux/version.h}
find $RPM_BUILD_ROOT/usr/src/kernels/{{ .uname }} -name ".*.cmd" -exec rm -f {} \;
find $RPM_BUILD_ROOT/usr/include \
  \( -name .install -o -name .check -o \
     -name ..install.cmd -o -name ..check.cmd \) | xargs rm -f
{{ end }}

{{ if .modules }}
cd $RPM_BUILD_ROOT/lib/modules/{{ .uname }}
{{ end }}
{{ if (ne .flavor "kdump") }}
ln -sf /usr/src/kernels/{{ .uname }} build
ln -sf /usr/src/kernels/{{ .uname }} source

# generate a fake initramfs so the RPM size on disk is approximately correct
dd if=/dev/zero of=$RPM_BUILD_ROOT/boot/initramfs-{{ .uname }}.img bs=1M count=16
{{ end }}

{{ if .modules }}
# remove files that will be auto generated by depmod at rpm -i time
rm -f $RPM_BUILD_ROOT/lib/modules/{{ .uname }}/modules.{alias*,builtin.bin,dep*,*map,symbols*,devname,softdep}
{{ end }}

{{ if (ne .flavor "kdump") }}
%post
/sbin/depmod -a {{ .uname }}
if [ -x /sbin/installkernel -a -r /boot/vmlinuz-{{ .uname }} -a -r /boot/System.map-{{ .uname }} ]; then
cp /boot/vmlinuz-{{ .uname }} /boot/.vmlinuz-{{ .uname }}-rpm
cp /boot/System.map-{{ .uname }} /boot/.System.map-{{ .uname }}-rpm
rm -f /boot/vmlinuz-{{ .uname }} /boot/System.map-{{ .uname }}
/sbin/installkernel {{ .uname }} /boot/.vmlinuz-{{ .uname }}-rpm /boot/.System.map-{{ .uname }}-rpm
rm -f /boot/.vmlinuz-{{ .uname }}-rpm /boot/.System.map-{{ .uname }}-rpm
fi
echo -e "{\n    \"fb\": {\n        \"fb_grub\": {\n            \"desired_kernel_version\": \"{{ .uname }}\"\n        }\n    }\n}" > /boot/chef_grub_desired_kernel

%preun
if [ -x /sbin/new-kernel-pkg ]; then
new-kernel-pkg --remove {{ .uname }} --rminitrd --initrdfile=/boot/initramfs-{{ .uname }}.img
fi
{{ end }}

%files
%defattr (-, root, root)
{{ if .modules }}
%dir /lib/modules
/lib/modules/{{ .uname }}
%exclude /lib/modules/{{ .uname }}/build
%exclude /lib/modules/{{ .uname }}/source
/boot/vmlinux-{{ .uname }}
{{ end }}
/lib/firmware/{{ .uname }}
/boot/System.map-{{ .uname }}
/boot/config-{{ .uname }}
/boot/vmlinuz-{{ .uname }}
%ghost /boot/initramfs-{{ .uname }}.img

{{ if .headers_rpm }}
%files headers
%defattr (-, root, root)
/usr/include
{{ end }}

{{ if .devel_rpm }}
%files devel
%defattr (-, root, root)
/usr/src/kernels/{{ .uname }}
/lib/modules/{{ .uname }}/build
/lib/modules/{{ .uname }}/source
{{ end }}

{{ if .selftests }}
%files selftests
%defattr (-, root, root)
/usr/src/kernels/{{ .uname }}/tools/testing/selftests/kselftest_install
{{ end }}
